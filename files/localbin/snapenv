#! /usr/bin/env bash
set -Eeuo pipefail

function usage() {
  echo "Usage:"
  echo "  $0 <ENV>"
  echo "  ENV: Environment to snapshot (e.g. tst)"
	echo
	echo "The script will return the temporary mount path."
}

if [[ $# != 1 ]]; then
  usage
  exit 1
fi

if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root"
   exit 1
fi

instance=$1
directory=$(ccontrol qlist $instance | cut -d '^' -f 2)
inst_path=$(echo $directory | awk -F '/' 'NF{NF-=1}1' OFS='/')
data_path=$(${inst_path}/bin/managedb --report name=$instance --parsable | tail -n 1 | awk -F '/' 'NF{NF-=2}1' OFS='/')
lv=$(findmnt -n -o SOURCE --target $directory)

if ! lvs $lv &> /dev/null; then
  echo "$lv does not appear to be a LVM logical volume."
  exit 2
fi

if lvs ${lv}_snap &> /dev/null; then
  echo "Logical volume ${lv}_snap already exists."
  exit 2
fi

lv_name=$(lvs --noheadings -o lv_name $lv)
vg=$(lvs --noheadings -o vg_name $lv)
vg_free=$(vgs --noheadings --nosuffix --units b -o vg_free $vg)

${inst_path}/bin/instfreeze

if [[ $vg_free -le 5368709120 ]]; then # If there is 5 GB or less free
  lvcreate -L ${vg_free}B -s -n ${lv_name}_snap $lv
else
  if [[ $(echo "$vg_free * 0.9 % 512" | bc | cut -d '.' -f 1) -eq 0 ]]; then
    lvcreate -L $(echo "$vg_free * 0.9" | bc | cut -d '.' -f 1)B -s -n ${lv_name}_snap $lv
  else
    lvcreate -L $(echo "512 * (($vg_free * 0.9) / 512)" | bc | cut -d '.' -f 1)B -s -n ${lv_name}_sanp $lv
  fi
fi

${inst_path}/bin/instthaw

temp_path="$(mktemp -d)"
mount -o ro ${lv}_snap $temp_path

echo $temp_path
# vim:set ts=2 sw=2 et:
